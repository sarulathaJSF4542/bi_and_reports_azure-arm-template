<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Server.Dashboards</name>
    </assembly>
    <members>
        <member name="M:Syncfusion.Server.Dashboards.ActionFilters.CompressionActionFilter.GZipEncodePage(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Sets up the current page or handler to use GZip through a Response.Filter
            IMPORTANT:
            You have to call this method before any output is generated!
            </summary>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.ActionFilters.CompressionActionFilter.IsGZipSupported(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Determines if GZip is supported
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.ActionFilters.CompressionActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Override to compress the content that is generated by
            an action method.
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.AccountsController.InitializeWebServerClient">
            <summary>
            Initialize the Settings for the UMS
            </summary>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.CategoryController.AddCategory(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="categoryName"></param>
             <param name="description"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.CategoryController.Category">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.CategoryController.EditCategory">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.CategoryController.GetItems(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.SortMethod},System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.FilterMethod})">
             <summary>
            
             </summary>
             <param name="searchKey"></param>
             <param name="skip"></param>
             <param name="take"></param>
             <param name="sorted"></param>
             <param name="filterCollection"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.CategoryController.IsCategoryExist(System.String)">
             <summary>
            
             </summary>
             <param name="categoryName"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.DashboardsController.GetItems(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.SortMethod},System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.FilterMethod},Syncfusion.Server.Base.DataClasses.DisplayCategory,System.Boolean)">
             <summary>
            
             </summary>
             <param name="searchKey"></param>
             <param name="skip"></param>
             <param name="take"></param>
             <param name="sorted"></param>
             <param name="filterCollection"></param>
             <param name="displayCategory"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.DashboardsController.IsItemExistInSameCategory(System.Guid,System.String)">
             <summary>
            
             </summary>
             <param name="categoryId"></param>
             <param name="itemName"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.DataSourcesController.AddDataSource">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.DataSourcesController.DataSources(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="userName"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.DataSourcesController.GetItems(Syncfusion.Server.Base.DataClasses.GridObject,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.SortMethod},System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.FilterMethod})">
             <summary>
            
             </summary>
             <param name="searchKey"></param>
             <param name="skip"></param>
             <param name="take"></param>
             <param name="sorted"></param>
             <param name="filterCollection"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.BoardsController.GetItemsForPinboard(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.SortMethod},System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.FilterMethod})">
             <summary>
            
             </summary>
             <param name="searchKey"></param>
             <param name="skip"></param>
             <param name="take"></param>
             <param name="sorted"></param>
             <param name="filterCollection"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.CloneItem(System.String,System.String,System.String,System.String)">
             <summary>
            
             </summary>
             <param name="itemId"></param>
             <param name="toCategoryId"></param>
             <param name="inputUserId"></param>
             <param name="itemName"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.CopyItem(System.String,System.String,System.String,System.String)">
             <summary>
            
             </summary>
             <param name="itemId"></param>
             <param name="toCategoryId"></param>
             <param name="userId"></param>
             <param name="itemName"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.CopyDatasource(System.String,System.String,System.String)">
             <summary>
            
             </summary>
             <param name="itemId"></param>
             <param name="userId"></param>
             <param name="itemName"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.CopyViewItem(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="itemId"></param>
             <param name="itemAction"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.DeleteConfirmation">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.DeleteItem">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.DeleteItemViewPermission(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="permission"></param>
             <param name="deleteItem"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.GetGroupItemViewPermissions(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.SortMethod},System.String,System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.FilterMethod})">
             <summary>
            
             </summary>
             <param name="itemViewId"></param>
             <param name="skip"></param>
             <param name="take"></param>
             <param name="sorted"></param>
             <param name="searchKey"></param>
             <param name="filterCollection"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.GetUserItemViewPermissions(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.SortMethod},System.String,System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.FilterMethod})">
             <summary>
            
             </summary>
             <param name="itemViewId"></param>
             <param name="skip"></param>
             <param name="take"></param>
             <param name="sorted"></param>
             <param name="searchKey"></param>
             <param name="filterCollection"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.IsDataSourceExist(System.String)">
             <summary>
            
             </summary>
             <param name="fileName"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.IsFileExist(System.String)">
             <summary>
            
             </summary>
             <param name="fileName"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.IsWidgetExist(System.String)">
             <summary>
            
             </summary>
             <param name="fileName"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.IsDraftExist(System.String)">
             <summary>
            
             </summary>
             <param name="dashboardName"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.ItemAddOptions">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.ItemGroupPermissionList(System.String)">
            <summary>
            This method is to get the accessible group list of an item
            </summary>
            <param name="itemId">Id of the Item</param>
            <returns>Group List</returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.ItemLogs(Syncfusion.Server.Base.DataClasses.GridObject,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.SortMethod})">
             <summary>
            
             </summary>
             <param name="itemId"></param>
             <param name="skip"></param>
             <param name="take"></param>
             <param name="sorted"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.ShareItemPermission(System.String)">
            <summary>
            This method is to get the share permission for an item
            </summary>
            <param name="itemId">Id of the Item</param>
            <returns>Users List, Group List, shared user group list, access mode values</returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.ItemUserPermissionList(System.String)">
            <summary>
            This method is to get the accessible user list of an item
            </summary>
            <param name="itemId">Id of the Item</param>
            <returns>Users List</returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.ItemVersion(System.String)">
             <summary>
            
             </summary>
             <param name="itemId"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.MakeItemPublic">
            <summary>
            Return the View for getting confirmation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.MakePublicItem">
            <summary>
            Return the result for the make public action
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.MoveItem(System.String,System.String,System.String)">
             <summary>
            
             </summary>
             <param name="itemId"></param>
             <param name="toCategoryId"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.MoveViewItem(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="itemId"></param>
             <param name="itemAction"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.RemoveItemPublic">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.RemovePublic">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.RollbackItem(System.Guid,System.Int32)">
             <summary>
            
             </summary>
             <param name="itemId"></param>
             <param name="versionId"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.VersionItems(Syncfusion.Server.Base.DataClasses.GridObject,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.SortMethod})">
             <summary>
            
             </summary>
             <param name="itemId"></param>
             <param name="skip"></param>
             <param name="take"></param>
             <param name="sorted"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.AddSampleItems">
            <summary>
            This method is to get the sample items
            </summary>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.ItemsController.AddSampleItem(System.String,System.String,System.String,System.String)">
            <summary>
            This method is to get the sample items
            </summary>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.SlideshowController.GetCreateSlideshowDetail">
            <summary>
            Get Create SlideShow Detail
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.SlideshowController.GetEditSlideshowDetail(System.String)">
            <summary>
            Get Edit SlideShow Detail
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.SlideshowController.AddSlideshow">
            <summary>
            This method is to add slideshow
            </summary>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.SlideshowController.EditSlideshow">
            <summary>
            Edit slideshow
            </summary>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.SlideshowController.IsSlideshowNameExist(System.String)">
            <summary>
            Check whether the item name already exist
            </summary>
            <param name="slideshowName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.SlideshowController.Slideshows">
            <summary>
            slideshows view
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.SlideshowController.GetAllSlideshows(Syncfusion.Server.Base.DataClasses.GridObject,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.SortMethod},System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.FilterMethod})">
            <summary>
            Get all slideshows
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.SlideshowController.DeleteItem">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.WidgetsController.AddWidget">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.WidgetsController.GetItems(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.SortMethod},System.Collections.Generic.List{Syncfusion.Server.Base.DataClasses.FilterMethod},Syncfusion.Server.Base.DataClasses.DisplayCategory)">
             <summary>
            
             </summary>
             <param name="searchKey"></param>
             <param name="skip"></param>
             <param name="take"></param>
             <param name="sorted"></param>
             <param name="filterCollection"></param>
             <param name="displayCategory"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.WidgetsController.Widgets(System.String)">
             <summary>
            
             </summary>
             <param name="userName"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.PartialViewController.GetTenantStatus">
            <summary>
            return tenant status
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.PartialViewController.GetNotificationCount">
            <summary>
            Return notification count
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.SchedulerController.GetRecurrenceType(System.String)">
            <summary>
            Get the enum values.
            </summary>
            <returns>Json Result of the operation</returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Controllers.UserController.UserPermission">
            <summary>
            To get the permissions of current user along with the group permissions assigned to them.
            </summary>
            <returns>Returns all the permissions of current user along with the permisions of group in which the user belongs to </returns>
        </member>
        <member name="T:Syncfusion.Server.Dashboards.Extensions.ApplicationBuilderExtensions">
            <summary>
            Application Builder Extensions Class.
            </summary>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Models.ItemModel.AddMultiDashboardItems(System.Guid,System.String,System.Int32,System.String)">
            <summary>
            This method used for two purpose
            If multi tabbed dashboard : add the multi tabbed dashboard's inside dashboard and their widgets
            If single dashboard : add dashboard's widgets
            </summary>
            <param name="parentId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Models.ScheduleManagement.ActivateGroup(System.Guid,System.Int32)">
            <summary>
            Activate the group
            </summary>
            <param name="scheduleId"></param>
            <param name="groupId"></param>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Models.ScheduleManagement.ActivateUser(System.Guid,System.Int32)">
            <summary>
            Activates the user
            </summary>
            <param name="scheduleId"></param>
            <param name="username"></param>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Models.ScheduleManagement.DeactivateGroup(System.Guid,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deactivate the group
            </summary>
            <param name="scheduleId"></param>
            <param name="resultGroupList"></param>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Models.ScheduleManagement.DeactivateUser(System.Guid,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deactivate the user
            </summary>
            <param name="scheduleId"></param>
            <param name="resultList"></param>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Models.ScheduleManagement.DisableSchedule(System.Guid)">
            <summary>
            Disabling a schedule
            </summary>
            <param name="scheduleId"></param>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Models.ScheduleManagement.EnableSchedule(System.Guid)">
            <summary>
            Enabling a schedule
            </summary>
            <param name="scheduleId"></param>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Models.ScheduleManagement.RemoveSchedule(System.Guid,System.Int32)">
            <summary>
            Removes a schedule
            </summary>
            <param name="scheduleId"></param>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Models.UserManagementModel.SpecialCharacterValidation(System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Models.UserManagementModel.ProfileUpdateByAdmin(Microsoft.AspNetCore.Mvc.ControllerContext,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.String)">
            <summary>
            Admin updates the user information
            </summary>
            <param name="context">Encapsulates information about an HTTP request</param>
            <param name="updatedDetails">Updated details in User Profile</param>
            <param name="toAddress">User's email address</param>
            <param name="fullName">Name of the User</param>
            <returns>True,Updated user profile mailed successfully
            </returns>
        </member>
        <member name="M:Syncfusion.Server.Dashboards.Models.UserManagementModel.ProfileUpdateByUser(Microsoft.AspNetCore.Mvc.ControllerContext,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Updates the user information
            </summary>
            <param name="context">Encapsulates information about an HTTP request</param>
            <param name="updatedDetails">Updated details in User Profile</param>
            <param name="toAddress">User's email address</param>
            <param name="fullName">Name of the User</param>
            <returns>True,Updated user profile mailed successfully
            </returns>
        </member>
    </members>
</doc>
