@using Newtonsoft.Json

@{
    var globalAppSettings = _globalAppSettings;

    ViewBag.Title = "[[[Connected Accounts]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    ViewBag.HelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.ConnectedAccounts);
    ViewBag.MessageBox = true;
    var jsondata = JsonConvert.SerializeObject(Model);
    var serverApiUrl = new DashboardServerApiEndPoints(globalAppSettings).DashboardServerApiUrl();
    var dashboardServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    var dashboardDesignerResourceUrl = globalAppSettings.SystemSettings.DesignerCdnLink.TrimEnd('/');
}

@section scripts{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/connected-accounts.css" />
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/connected-accounts.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/connected-accounts.min.css" />
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/connected-accounts.min.js"></script>
    </environment>
    <script>
        var editConnectedAccountUrl = "@Url.Action("UpdateConnectedAccount", "User")";
        var deleteConnectedAccountUrl = "@Url.Action("DeleteConnectedAccount", "User")";
        var getConnectedAccountsUrl = "@Url.Action("GetConnectedAccounts", "User")";
    </script>

    <script type="text/x-jsrender" id="name-template">
        <div class="grid-content">
            <span class="item-name"><span title="{{:Name}}" data-toggle="tooltip">{{:Name}}</span></span>
            <span class="provider-mail"><span title="{{:Email}}" data-toggle="tooltip">{{:Email}}</span></span>
        </div>
    </script>
    <script type="text/x-jsrender" id="provider-template">
        @if (!ServerAppConfig.IsSelfHosted)
        {
            <div class="grid-content">
                <span class="item-name"><span title="{{:Provider}}" data-toggle="tooltip">{{:Provider}}</span></span>
                {{for ServiceList}}
                <img class="service-image" title="{{:Name}}" data-toggle="tooltip" src="@dashboardDesignerResourceUrl/cdn/css/designer/images/datasource/{{:Icon}}" alt="{{:Name}}" onerror="this.onerror = null; this.src = rootUrl + '@dashboardServerResourceUrl/cdn/images/datasource.svg';" />
                {{/for}}
            </div>
        }
        else
        {

            <div class="grid-content">
                <span class="item-name"><span title="{{:Provider}}" data-toggle="tooltip">{{:Provider}}</span></span>
                {{for ServiceList}}
                <img class="service-image" title="{{:Name}}" data-toggle="tooltip" src="@dashboardDesignerResourceUrl/cdn/css/designer/images/datasource/{{:Icon}}" alt="{{:Name}}" onerror="this.onerror = null; this.src = '@dashboardServerResourceUrl/cdn/images/datasource.svg';" />
                {{/for}}
            </div>
        }
    </script>
    <script type="text/x-jsrender" id="created-date-template">
        <span class="grid-content item-name"><span title="{{:CreatedDate}}" data-toggle="tooltip">{{:CreatedDate}}</span></span>
    </script>
    <script type="text/x-jsrender" id="last-authorized-template">
        <span class="grid-content item-name"><span title="{{:AuthorizedDate}}" data-toggle="tooltip">{{:AuthorizedDate}}</span></span>
    </script>
    <script type="text/x-jsrender" id="itemname-header">
        <div class="item-name">[[[Name]]]</div>
    </script>
    <script type="text/x-jsrender" id="provider-header">
        <div class="item-header">[[[Provider]]]</div>
    </script>
    <script type="text/x-jsrender" id="created-date-header">
        <div class="item-header">[[[Created Date]]]</div>
    </script>
    <script type="text/x-jsrender" id="last-authorized-header">
        <div class="item-header">[[[Last Authorized]]]</div>
    </script>

    <script type="text/x-jsrender" id="options">
        <div class="dropdown">
            <span class="dropdown-toggle option-icon" data-toggle="dropdown" data-content="{{:Id}}">
                <span class="su su-options"> </span>
            </span>
            <ul class="dropdown-menu" role="menu">
                <li>
                    <a href="javascript:void(0);" class="re-authorize-account" data-content="{{:Id}}" data-reauthorize-url="@ServerAppConfig.InternalAppDataServiceUrl/v1.0/oauth/re-authorize?token=@ViewBag.AccessToken&id={{:Id}}&server=@serverApiUrl{{:OrganizationUrl ? '&resourceurl=' + OrganizationUrl : ''}}">
                        <i class="su su-re-authorize"></i>
                        <span>[[[Reauthorize]]]</span>
                    </a>
                </li>
                <li class="divider" role="separator"></li>
                <li>
                    <a href="javascript:void(0);" class="edit-connected-account" data-content="{{:Id}}" data-account-name="{{:Name}}">
                        <i class="su su-edit"></i>
                        <span>[[[Edit]]]</span>
                    </a>
                </li>
                <li>
                    <a class="delete-class delete-connected-account" data-content="{{:Id}}" data-account-name="{{:Name}}" href="javascript:void(0);">
                        <i class="su su-delete"></i>
                        <span>[[[Delete]]]</span>
                    </a>
                </li>
            </ul>
        </div>
    </script>

    <script type="text/javascript">
        $(function () {
            $("#search-linked-accounts").val("");
            $("#ConnectedAccountGrid").ejGrid({
                dataSource: @Html.Raw(jsondata),
                gridLines: ej.Grid.GridLines.None,
                allowPaging: true,
                allowSorting: true,
                allowSearching: true,
                allowSelection: false,
                allowFiltering: false,
                pageSettings: { pageSize: 20 },
                filterSettings: { filterType: "excel" },
                selectionType: ej.Grid.SelectionType.Single,
                selectionSettings: { selectionMode: ["row"] },
                actionBegin: "fnOnLinkedAccountGridActionBegin",
                enableRowHover: true,
                enableAltRow: false,
                dataBound: function(args) {
                    $('[data-toggle="tooltip"]').tooltip();
                },
                rowSelecting: function(e) {
                    this.multiSelectCtrlRequest = true;
                },
                columns: [
                    {
                        template: true,
                        allowSorting: true,
                        templateID: "#name-template",
                        headerText: "[[[Name]]]",
                        width: 115,
                        headerTemplateID: "#itemname-header",
                        field: "Name",
                        type: "string"
                    },
                    {
                        field: "Services",
                        templateID: "#provider-template",
                        headerText: "[[[Provider]]]",
                        headerTemplateID: "#provider-header",
                        type: "string",
                        width: 115
                    },
                    {
                        field: "CreatedOn",
                        headerText: "[[[Created On]]]",
                        headerTemplateID: "#create-date-header",
                        templateID: "#created-date-template",
                        width: 80
                    },
                    {
                        field: "AuthorizedDate",
                        headerText: "[[[Last Authorized]]]",
                        headerTemplateID: "#last-authorized-header",
                        templateID: "#last-authorized-template",
                        width: 80
                    },
                    {
                        template: true,
                        allowSorting: false,
                        templateID: "#options",
                        width: 75
                    }
                ]

            });
        });
    </script>
}

@section MainSection{

    @await Html.PartialAsync("_ProfileMenu")

    <div id="linked-accounts-container" class="admin-page-container">
        <div class="admin-page-header col-xs-12">
            <hgroup class="col-xs-8 no-padding">
                <h1 class="page-title">[[[CONNECTED ACCOUNTS]]]</h1>
                <h5 class="no-padding page-description">[[[Manage the external accounts that you have granted access for data analytics.]]]</h5>
            </hgroup>
        </div>

        <div class="admin-page-body col-lg-12">
            <div id="search-area" class="pull-right">
                <input type="text" class="pull-left" id="search-linked-accounts" placeholder="[[[Search]]]" />
                <span class="su su-inner-close close-icon pull-left" id="clear-search" title="[[[Clear search]]]"></span>
                <span class="su su-search search-accounts pull-left" title="[[[Search]]]"></span>
            </div>
            <div class="col-xs-12 no-padding ">
                <div id="ConnectedAccountGrid"></div>
            </div>
        </div>

        <div id="edit-connected-account-popup" class="fluent-popup display-none">
            <div class="fluent-popup-header">
                <h4 class="popup-title">
                    <span>[[[Edit Connected Account]]]</span>
                    <button id="close-edit-connected-account" type="button" title="[[[Close]]]" class="close popup-close" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </h4>
            </div>
            <div class="fluent-popup-body">
                <div class="edit-name">
                    <label class="popup-label">[[[Name]]]</label>
                    <input class="form-control textarea" maxlength="255" id="edit-connected-account-name" />
                </div>
            </div>
            <div id="edit-connected-account-button" class="fluent-popup-footer">
                <div id="button-container" class="col-lg-12 col-md-12">
                    <button type="button" id="cancel-edit-account" class="app-button app-secondary-button pull-right">[[[Cancel]]]</button>
                    <button type="button" id="submit-edit-account" data-conected-account-id="" class="app-button app-primary-button pull-right" disabled="disabled">[[[Submit]]]</button>
                </div>
            </div>
        </div>
    </div>
}