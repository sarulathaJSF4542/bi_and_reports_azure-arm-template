@using System.IO
@using i18n.Core.Abstractions.Domain
@using Microsoft.AspNetCore.Builder;
@using Microsoft.AspNetCore.Localization;
@inject RequestLocalizationOptions _localizationOptions
@model NotificationSettings
@{
    var globalAppSettings = _globalAppSettings;
    var identityResponse = Context.RequestServices.GetRequiredService<ServerPrincipal>();
    var userDetail = (User)ViewBag.UserDetail;
    var groupList = ViewBag.GroupList;
    ViewBag.Title = "[[[My Profile]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    var userHomepage = ViewBag.UserHomepage as List<HomepageDetail>;
    var idpProfileUrl = ViewBag.IdpProfileUrl;
    var idpUserPreferenceUrl = ViewBag.IdpUserPreferenceUrl;
    var idpChangePasswordUrl = ViewBag.IdpChangePasswordUrl;
    var isProfileUpdateSuccess = ViewBag.IsProfileUpdateSuccess;
    var isProfileUpdateFailure = ViewBag.IsProfileUpdateFailure;
    var isPasswordUpdateSuccess = ViewBag.IsPasswordUpdateSuccess;
    var isPasswordUpdateFailure = ViewBag.IsPasswordUpdateFailure;
    var isUserPreferenceSuccess = ViewBag.IsUserPreferenceUpdateSuccess;
    var isUserPreferenceFailure = ViewBag.IsUserPreferenceUpdateFailure;
    var idpreferenceId = Context.Session.GetString("idpReferenceId") != null ? Context.Session.GetString("idpReferenceId").ToString() : string.Empty;
    var idPUrl = ServerAppConfig.InternalAppIdpUrl;
    ViewBag.HelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.UserProfile);
    var dashboardSettings = ViewBag.DashboardSettings;
    var userPreference = !string.IsNullOrWhiteSpace(Context.Request.Cookies[ServerAppConfig.UserLanguageCookieName]) ? CookieRequestCultureProvider.ParseCookieValue(Context.Request.Cookies[ServerAppConfig.UserLanguageCookieName]).Cultures.FirstOrDefault().Value : identityResponse.UserPreference.LanguageSettings.Language;
    var languagePreference = globalAppSettings.SystemSettings != null && globalAppSettings.SystemSettings.IsSystemLanguagePreference && !string.IsNullOrWhiteSpace(globalAppSettings.SystemSettings.Language) ? globalAppSettings.SystemSettings.Language : userPreference;
    var nativeNameTitleCase = LanguageTag.GetCachedInstance(!string.IsNullOrWhiteSpace(languagePreference) ? languagePreference : "en-us").NativeNameTitleCase;
    var dashboardServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
}


@section scripts{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/profile.css" />
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/profile.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/profile.min.css" />
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/profile.min.js"></script>
    </environment>
    <script type="text/javascript">
        var dashboardServerResourceUrl = "@globalAppSettings.SystemSettings.CDNLink";
        var updateprofilepictureUrl = "@Url.Action("updateprofilepicture", "User")";
        var isAdmin = @Html.Raw(Json.Serialize(ViewBag.IsAdminAccount));
        var fileUploadUrl = "@Url.Action("Upload", "fileupload")";
        var avatarUrl = "@(idPUrl + Url.Action("Avatar", "User"))";
        var updateUserProfileUrl = "@Url.Action("UpdateUserHomePageInProfile", "User")";
        var updatepasswordUrl = "@Url.Action("updatepassword", "User")";
        var deleteavatarUrl = "@Url.Action("deleteavatar", "UserManagement")";
        var getdefaultavatarUrl = "@Url.Action("getdefaultavatar", "User")";
        var saveUserNotificationSettingsUrl = "@Url.Action("savenotificationsettings", "User")";
         var userAutosaveFilterSettingsUrl = "@Url.Action("UserAutosaveFilterSettings", "User")";

        var successMessage = "@isProfileUpdateSuccess";
        var failureMessage = "@isProfileUpdateFailure";
        var passwordSuccessMessage = "@isPasswordUpdateSuccess";
        var defaultViewSettings = "@ViewBag.DefaultView";
        var dashboardSettingsUrl = '@Url.Action("DashboardSettings", "Administration")';
        var passwordFailureMessage = "@isPasswordUpdateFailure";
        var userPreferencesuccessMessage = "@isUserPreferenceSuccess";
        var userPreferenceFailureMessage = "@isUserPreferenceFailure";
        var dataLanguageUrl = "@Url.Action("SaveDataLanguage", "User")";

        window.onload = function (e) {
            if (successMessage.toLowerCase() === "true" && successMessage != null) {
                SuccessAlert("[[[Update Profile]]]", "[[[User profile has been updated successfully.]]]", 7000);
            }
            else if (failureMessage.toLowerCase() === "true" && failureMessage != null) {
                WarningAlert("[[[Update Profile]]]", "[[[User profile update failed.]]]", 7000);
            }
            else if (passwordSuccessMessage.toLowerCase() === "true" && passwordSuccessMessage != null) {
                SuccessAlert("[[[Update Password]]]", "[[[Password has been updated successfully.]]]", 7000);
            }
            else if (passwordFailureMessage.toLowerCase() === "true" && passwordFailureMessage != null) {
                WarningAlert("[[[Update Password]]]", "[[[Password update failed.]]]", 7000);
            }
            else if (userPreferencesuccessMessage.toLowerCase() === "true" && userPreferencesuccessMessage != null) {
                SuccessAlert("[[[Update User Preference]]]", "[[[User preference has been updated successfully.]]]", 7000);
            }
            else if (userPreferenceFailureMessage.toLowerCase() === "true" && userPreferenceFailureMessage != null) {
                WarningAlert("[[[Update User Preference]]]", "[[[User preference update failed.]]]", 7000);
            }
        }

        $(document).ready(function () {
            $("#avatar-button-click, #avatar-delete-click").css("display", "none");
            $("#save-button").hide();
            if (@ViewBag.EditProfile > 0) {
                $("#edit").trigger("click");
            }
            if(@ViewBag.EditNotification > 0){
                $("#edit-settings").trigger("click");
            }
            $('[data-toggle="tooltip"]').tooltip();
            var fulldata = JSON.parse(@Html.Raw(Json.Serialize(ViewBag.ProfileDetail)));
            window.dateFormat = "@globalAppSettings.SystemSettings.DateFormat";
            editUser(fulldata, "@globalAppSettings.SystemSettings.DateFormat");

            $(document).on("click", ".popup-close", function (e) {
                $(".edit-profile-field").attr("value","updateUserProfileUrl");
                $("#profile-picture").attr("src", "@(globalAppSettings.SystemSettings.CDNLink + "/images/preview.jpg")");
                $('#upload-image').attr("disabled", "disabled");
                if ($(".img-container").children().hasClass("jcrop-active")) {
                    $('#profile-picture').data("Jcrop").destroy();
                }
                $(function () {
                    $("#avatar-upload-box").ejDialog({
                        showOnInit: false,
                        allowDraggable: true,
                        enableResize: false,
                        width: "600px",
                        enableModal: true,
                        showHeader: false,
                        close: "DialogBoxClose",
                        closeOnEscape: true
                    });
                });
                eDialog = $("#avatar-upload-box").data("ejDialog");
                eDialog.close();
            });

            if(@userHomepage.Count == 0){
                $("#default-homepage").find(".remove-default-homepage").remove();
                $("#default-homepage").selectpicker("refresh");
                $(".btn-group .bs-searchbox").after("<span class='no-result'>[[[No Results Found]]]</span>");
            }
            if ("@ViewBag.IsDefaultHomepage" == "True") {
                $("#default-homepage").val("@ViewBag.DefaultHomePageId");
                $("#default-homepage").attr("data-original-value", "@ViewBag.DefaultHomePageId");
                $("#default-homepage option:eq(0)").before("<option class='remove-default-homepage' value='null'>[[[No default Pinboard]]]</option>");
            }

            if("@ViewBag.DefaultHomePageName" == ""){
                $("#no-default-homepage").removeClass("hide");
                $("#homepage-name").addClass("hide");
            }
        });
    </script>
}
@section MainSection{
    @await Html.PartialAsync("_ProfileMenu")
    <div id="edit-profile-base-div" class="col-lg-12 col-sm-12 col-md-12 col-xs-12 ">
        <input type="hidden" class="page-name" data-content="[[[USER PROFILE]]]">
        <input type="hidden" id="user-id" value="@identityResponse.User.Email;" />
        <span id="is-aduser">@ViewBag.IsAdUser</span>
        <span id="logged-user">@ViewBag.LoggedUser</span>
        <div class="col-lg-12 col-sm-12 col-md-12 col-xs-12 no-padding admin-page-container" id="user-profile-master">
            <div id="edit-profile-heading-div" class="col-lg-12 col-md-12 co-sm-12 col-xs-12 admin-page-header">
                <hgroup>
                    <h1 class="col-xs-3 col-sm-4 col-md-4 col-lg-4 section-heading page-title header">[[[MY PROFILE]]]</h1>
                </hgroup>
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-8 button-section">
                    @if (!ViewBag.IsAdUser && userDetail.DirectoryType != DirectoryType.Syncfusion)
                    {
                        <a rel="alternate" hreflang="en" href="@idpChangePasswordUrl" class="link-button pull-right edit-password" title="">[[[Change Password]]]</a>
                    }
                </div>
            </div>
            <div class="profile-section profile-section-first-div col-lg-12 col-md-12 col-sm-12 col-xs-12 no-padding admin-page-body">
                <div class="img-view-holder col-lg-12 col-md-12 col-sm-10 col-xs-12" style="border: 0px">
                    <div class="profile-pic-tag" data-id="@idpreferenceId" data-type="user" data-display-name="@userDetail.DisplayName" data-image-size="120" data-toggle="tooltip" title="@userDetail.DisplayName" data-placement="top"></div>
                </div>
                <div id="edit-profile-form-div" class="col-sm-6 col-xs-12 no-padding margin-top10">

                    <form class="form-horizontal edit-profile-form" autocomplete="off">
                        <div class="form-group no-padding">
                            <label class="label-panel text-right app-textbox-label">[[[Username]]]</label>
                            <div class="col-sm-5 col-xs-12 group-list">
                                <input class="form-control disable-content" disabled="disabled" id="user-username" name="user-username" type="text" value="@userDetail.Username" autocomplete="off">
                            </div>
                        </div>
                        <div class="form-group no-padding line-spacing">
                            <label class="label-panel text-right app-textbox-label">[[[First Name]]]</label>
                            <div class="col-sm-5 col-xs-12 group-list">
                                <input class="form-control disable-content" disabled="disabled" id="user-firstname" name="user-firstname" type="text" value="@userDetail.FirstName" autocomplete="off">
                            </div>
                        </div>
                        <div class="form-group no-padding line-spacing">
                            <label class="label-panel text-right app-textbox-label">
                                [[[Last name]]]
                            </label>
                            <div class="col-sm-5 col-xs-12 group-list">
                                <input class="form-control disable-content" disabled="disabled" id="user-lastname" name="user-lastname" type="text" value="@userDetail.LastName" autocomplete="off">
                            </div>
                        </div>
                        <div class="form-group no-padding line-spacing">
                            <label class="label-panel text-right app-textbox-label">[[[Email]]] </label>
                            <div class="col-sm-5 col-xs-12 group-list">
                                <input class="form-control disable-content" disabled="disabled" id="user-email" name="user-email" type="text" value="@(userDetail.CanShowEmail ? userDetail.Email : string.Empty)" autocomplete="off">
                            </div>
                        </div>
                        <div class="form-group no-padding line-spacing">
                            <label class="label-panel text-right app-textbox-label">[[[Phone]]]</label>
                            <div class="col-sm-5 col-xs-12 group-list">
                                <input class="form-control disable-content" disabled="disabled" id="user-phonenumber" name="user-phonenumber" type="text" value="@userDetail.ContactNumber" autocomplete="off">
                            </div>
                        </div>
                        <div class="form-group no-padding line-spacing" style="display:none">
                            <label class="label-panel text-right app-textbox-label">
                                [[[Isolation Code]]]
                            </label>
                            <div class="col-sm-5 col-xs-12 group-list">
                                <input class="form-control disable-content" disabled="disabled" id="isolation-code" name="isolation-code" type="text" value="@ViewBag.IsolationCode" autocomplete="off">                              <span id="contact-validation" class="alert-messages validation-message"></span>
                            </div>
                        </div>
                        <div class="form-group no-padding line-spacing">
                            <label class="label-panel text-right app-textbox-label">[[[Groups]]]</label>
                            <div class="col-sm-5 col-xs-12 group-list">
                                @{
                                    for (var group = 0; group < ViewBag.GroupList.Count; group++)
                                    {
                                        <div id="groups" class="content-size" title="@ViewBag.GroupList[group].Name" data-html="false" data-container="body" data-toggle="tooltip" data-placement="auto top">
                                            @ViewBag.GroupList[group].Name
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </form>
                </div>
                <div id="edit-button" class="col-sm-4 col-xs-12 no-padding">
                    <span class="bg-info" id="id-account-link">
                        [[[Update these details through your]]]
                        <a hreflang="en" href="@idpProfileUrl" id="edit-link">[[[Account]]]</a>
                    </span>
                </div>
                <div class="col-xs-12 col-sm-4 col-md-4 col-lg-3 no-padding" id="message">
                    <h5 id="success-message"></h5>
                </div>
            </div>
            @if (userDetail.DirectoryType != DirectoryType.Local)
            {
                <div id="azure-user-info" class="col-xs-12 no-padding">[[[* Editing user profile except the picture is not currently supported for Azure Active Directory, Windows Active Directory, Office 365, database, OAuth and OpenID Connect accounts.]]]</div>
            }

            <div class="profile-section account-preference-section-div col-lg-12 col-md-12 col-sm-12 col-xs-12 no-margin admin-page-body">
                <input type="hidden" class="page-title" data-page="ACCOUNT PREFERENCE">
                <div class="account-preference-heading-section col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 no-padding" id="section-heading">[[[Account Preferences]]]</div>
                    @if (globalAppSettings.SystemSettings.IsSystemLanguagePreference)
                    {
                        <p class="note-content col-xs-12 no-padding text-warning">
                            [[[* Some settings are managed by your administrator.]]]
                        </p>
                    }
                </div>
                @if (ServerAppConfig.IsSelfHosted)
                {
                    <div class="account-preference-table col-sm-8 col-xs-12" cellpadding="20">
                        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12 no-padding line-spacing">
                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 no-padding">
                                <div class="col-sm-5 text-right no-padding user-language-container">
                                    <label class="col-xs-11 no-padding">[[[Application language]]]</label>
                                    <div class="user-language-info-tag">
                                        <span class="dropdown-toggle cursor-type" data-toggle="dropdown"><span class="su su-info" title=""></span></span>
                                        <div class="col-xs-2 dropdown-menu common-tooltip-info language-tooltip-info" role="menu">
                                            [[[The language used in the application user interface (such as menu items, dialog boxes, toolboxes, and more).]]]
                                            </div>
                                       </div>
                                </div>
                                <div class="dropdown col-xs-4 language-group">
                                    <div class="no-padding pull-left" id="language">
                                        <button disabled class="btn btn-default dropdown-toggle pull-left" type="button" id="dropdown-lang" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" title="@nativeNameTitleCase">
                                            <span class="lang-overflow">@nativeNameTitleCase</span>
                                            <i class="su-dropdown-arrow arrow-margin"></i>
                                        </button>
                                        @{
                                            int i;
                                            var supportedCultures = GlobalAppSettings.GetSupportedLanguages();
                                            var supportedLanguages = supportedCultures.Distinct().ToDictionary(x => string.Format("{0}", x), x => x);
                                            var langs = supportedLanguages.OrderBy(x => x.Key).ToArray();
                                            int cellcnt = langs.Length + 1;
                                            int maxcols = langs.Length + 1;
                                            for (i = 1; i < cellcnt;)
                                            {
                                                bool lastRow = i + maxcols >= cellcnt;
                                                <ul class="@(Html.Raw((i % 2) == 0 ? "even" : "odd")) @(Html.Raw(lastRow ? "last" : "")) dropdown-menu" aria-labelledby="dropdownMenu2">
                                                @for (int j = 0; j < maxcols && i < cellcnt; ++i, ++j)
                                                {
                                                    string langtag;
                                                    string title;
                                                    string nativelangname;
                                                    if (i == 0)
                                                    {
                                                        langtag = "";
                                                        title = "Browser default language setting";
                                                        nativelangname = "Auto ";
                                                    }
                                                    else
                                                    {
                                                        LanguageTag lt = langs[i - 1].Value;
                                                        title = langtag = lt.ToString();
                                                        nativelangname = lt.NativeNameTitleCase;
                                                    }
                                                }
                                                @if (lastRow)
                                                {
                                                    for (; i % maxcols != 0; ++i)
                                                    {
                                                        <li></li>
                                                    }
                                                }
                                                </ul>
                                            }
                                         }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                 }

                <div class="col-xs-8 no-padding" id="data-language-container">
                    <div class="col-sm-5 text-right user-model-language-container">
                        <label class="col-xs-11 no-padding user-model-language">[[[Data language]]]</label>
                        <div class="model-language-info-tag">
                            <span class="dropdown-toggle cursor-type" data-toggle="dropdown"><span class="su su-info" title=""></span></span>
                            <div class="col-xs-2 dropdown-menu common-tooltip-info model-language-tooltip-info" role="menu">
                                [[[The language used in date, number, and currency formats.]]]
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-5 dropdown" id="user-model-dropdown-container">
                        @Html.DropDownList("model-language", ViewBag.UserModelLanguages as IEnumerable<SelectListItem>, new { @class = "selectpicker user-model-language-dropdown form-control pull-left", disabled = "disabled", data_live_search = "true", data_size = 10 })
                    </div>
                </div>
                @if (ServerAppConfig.IsSelfHosted)
                {
                    <div id="edit-button" class="col-sm-4 col-xs-12 no-padding">
                        <span class="bg-info" id="id-account-link">
                            [[[Update these details through your]]]
                            <a hreflang="en" href="@idpUserPreferenceUrl" id="edit-link">[[[Account]]]</a>
                        </span>
                    </div>
                }
                else
                {
                    <div id="edit-button" class="col-sm-3 col-xs-12 no-padding">
                        <input type="button" class="secondary-button pull-right" id="edit-model-language" title="" value="[[[Edit]]]">
                        <input type="button" class="secondary-button pull-right popup-close" style="display: none;" title="" id="cancel-model-language" value="[[[Cancel]]]">
                        <input type="button" class="primary-button pull-right inactive-content data-language-save" style="display: none;" id="save-model-language" title="" onclick="saveModelLanguage()" value="[[[Save]]]">
                    </div>
                    <div class="col-xs-12 col-sm-4 col-md-4 col-lg-3 no-padding" id="message">
                        <h5 id="success-message"></h5>
                    </div>
                }
            </div>

            <div class="profile-section profile-section-second-div col-lg-12 col-md-12 col-sm-12 col-xs-12 no-padding admin-page-body">
                <div id="edit-profile-form-div" class="col-sm-6 col-xs-12 no-padding margin-top10">
                    <div class="account-preference-heading-section col-lg-12 col-md-12 col-sm-12 col-xs-12 pinboards-header">
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 no-padding" id="section-heading">[[[Pinboards]]]</div>
                    </div>
                    <form class="form-horizontal edit-profile-form" autocomplete="off">
                        <div class="form-group no-padding" id="homepage-container">
                            <label class="col-xs-12 col-sm-5 col-md-6 col-lg-5 no-padding text-right top-align">
                                [[[Default pinboard]]]
                                @if (!@ServerAppConfig.IsHideHelpLink)
                                {
                                    <div id="info-tag">
                                        <span class="dropdown-toggle cursor-type" data-toggle="dropdown"><span class="su su-info" title=""></span></span>
                                        <div class="col-xs-2 dropdown-menu common-tooltip-info" id="pinboard-tooltip-info" role="menu">
                                            [[[Click ]]] <a href="@(ServerAppConfig.AppSettings.Documentation.BaseUri + GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.SetDefaultPinboards))" target="_blank">[[[here]]]</a>[[[  to learn how to set a default pinboard.]]]
                                        </div>
                                    </div>
                                }
                            </label>

                            <div class="col-sm-5 col-xs-12 group-list" title="@ViewBag.DefaultHomePageName" id="homepage-name" data-toggle="tooltip" data-placement="top">
                                @ViewBag.DefaultHomePageName
                            </div>
                            <div class="col-sm-5 col-xs-12 group-list hide" id="no-default-homepage">
                                [[[No default Pinboard]]]
                            </div>
                            <div class="col-sm-5 col-xs-12 group-list hide" id="homepage-list">
                                <select id="default-homepage" data-live-search="true" class="selectpicker" data-size="5" title="[[[Select Pinboard]]]" data-original-value="null">
                                    <option data-hidden="true" value="">[[[Select Default Homepage]]]</option>
                                    @for (var item = 0; item < userHomepage.Count; item++)
                                    {
                                        <option value="@userHomepage[item].Id">@userHomepage[item].Name</option>
                                    }
                                </select>
                            </div>
                        </div>

                    </form>
                </div>
                <div id="edit-button" class="col-sm-3 col-xs-12 no-padding">
                    <input type="button" class="secondary-button pull-right" id="edit" title="" value="[[[Edit]]]">
                    <input type="button" class="secondary-button pull-right popup-close" title="" id="cancel-button" value="[[[Cancel]]]">
                    <input type="button" class="primary-button pull-right inactive-content" id="save-button" title="" onclick="SaveProfile()" value="[[[Save]]]">
                </div>

                <div class="col-xs-12 col-sm-4 col-md-4 col-lg-3 no-padding" id="message">
                    <h5 id="success-message"></h5>
                </div>
            </div>

            @await Html.PartialAsync("_UserDashboardSettings")
            @await Html.PartialAsync("_UserNotificationPreference")
        </div>
    </div>
    <input type="hidden" id="image" value="" />
    <span id="baseurl" data-url="@Url.Action("Index", "Home")"></span>
    @await Html.PartialAsync("_ProfilePictureUploadBox", globalAppSettings.SystemSettings.CDNLink)
}